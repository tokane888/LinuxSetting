## 以下 https://github.com/Neos21/dotfiles から一部引用

# Session Global Option (set -g)
# ================================================================================

# tmux 上の vi で colorscheme が有効にならないため設定する
set -g default-terminal screen-256color

# 通常の枠線を水色にする
set -g pane-border-style fg="colour51"

# アクティブなペインの枠線を赤色にする
set -g pane-active-border-style fg="colour196"

# マウス操作を有効にする
set -g mouse on

# キーストロークのディレイを減らす
set -sg escape-time 1

# リフレッシュ間隔を変更する
set -g status-interval 30

# ステータスバーの右部分に時計を表示する
set -g status-right-length 80
set -g status-right "#( ~/.tmux/right_status.sh ) [%Y-%m-%d (%a) %H:%M]"

# MacOS : reattach-to-user-namespace を使用してクリップボード共有を有効にする
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'set -g default-command "reattach-to-user-namespace -l bash"'


# Window Global Option (set-window-option)
# ================================================================================

# ウィンドウの番号を 1 から開始する (デフォルトは 0)
set-window-option -g pane-base-index 1

# コピーモード (Prefix + [ で開始) で vi キーバインドを使う
set-window-option -g mode-keys vi


# Bind Key
# ================================================================================

# Prefix + | でペインを縦に分割する
bind-key | split-window -h
# Prefix + - でペインを横に分割する
bind-key - split-window -v

# Prefix + hjkl でペイン移動
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Prefix + Shift + hjkl でペインをリサイズする
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Prefix + r で設定ファイルをリロードする
bind-key r source-file ~/.tmux.conf \; display "Reloaded."

# Prefix + o で tmux 用の画面クリアコマンドを入力する
bind-key o send-keys "clear && tmux clear-history" \; send-keys Enter

# Prefix + v でコピーモードを開始する (デフォルトは Prefix + [)
bind-key v copy-mode \; display "Copy Mode!"

# Prefix + Ctrl + p でペースト (デフォルトは Prefix + ]・クリップボード共有しているので Cmd + V でも OK)
bind-key C-p paste-buffer

# コピーモード中 v か Space で選択を始める
bind-key -T copy-mode-vi v send -X begin-selection \; display "Copy Start."
bind-key -T copy-mode-vi Space send -X begin-selection \; display "Copy Start."
# コピーモード中 V で行選択を始める
bind-key -T copy-mode-vi V send -X select-line \; display "Copy Line Start."
# コピーモード中 Ctrl + v で矩形選択を始める
bind-key -T copy-mode-vi C-v send -X rectangle-toggle \; display "Copy Rectangle Start."

# コピーモード中 y か Enter でヤンク (コピー)
# MacOS : reattach-to-user-namespace を使用
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display "Copied!"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display "Copied!"'
# Windows : tmux save-buffer で echo しパイプを使って clip.exe に渡す
if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "tmux save-buffer - | clip.exe" \; display "Copied!"'
if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tmux save-buffer - | clip.exe" \; display "Copied!"'

# コピーモード中 Esc で中止
bind-key -T copy-mode-vi Escape send -X cancel

# zsh対応
set -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

# アクティブでないペインを白っぽく
set -g window-style 'bg=colour239'
set -g window-active-style 'bg=colour232'

# status barにssh接続先host名表示
set -g pane-border-status bottom
# TODO: 一部PCでpane_current_commandの値が、ssh接続後もzshからsshに切り替わらず、スクリプトが動作しないので調査
set -g pane-border-format "#P #(tmux-pane-border #{pane_current_command} #{pane_pid})"

set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode C-c send-keys -X copy-pipe-and-cancel "xsel -bi"
bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "xsel -bi"

# status-leftに18:30までの残り時間表示
set-option -g status-left " #( ~/.tmux/remain_time.sh ) "
